SkyController 2
===============

To load and debug the SC2, you need adb to get a shell on it (https://developer.android.com/studio/command-line/adb.html).
I'm using a Apple USB Ethernet Adapter (MC704ZM/A) from my PC. I read adapter from various vendors do not work. I only tried the one I mentioned and it works fine.

Alternatively, you can wait for SC2 to connect to the Disco. Then connect your PC via Wi-Fi to the Disco, get a shell on the Disco (telnet 192.168.42.1) and use adb on the Disco to connect to its Wi-Fi client SC2. I packaged the adb binaries in the Disco directory. You can do the same from RPi3 (sudo apt-get install android-tools-adb, SC2's IP on the USB Ethernet interface is 192.168.53.1 for firmware <=1.0.4, newer firmware will request for an IP via DHCP), whenever SC2 is connected to RPi3. This is somewhat tedious, I recommend the USB adapter.



copy the files to SC2 using ftp to its chrooted root (in reality /data/lib/ftp/)


mount -o remount,rw /

/etc/boxinit.d/99-mppd.rc 
# append the following block
	service raspid /data/lib/ftp/raspibridge.sh
	    class mpp
	    user root

mount -o remount,ro /

cp -p /data/lib/mppd/drone_manager.cfg /data/lib/mppd/mydrone_manager.cfg

edit /data/lib/mppd/mydrone_manager.cfg and duplicate the DISCO block. The new block's SSID should PISCO-... instread of DISCO-... and its order = 1, set the DISCO's order = 2.
decrease the PISCO's serial's last digit by one (depending what you set in RPi3's hostapd vendor element).
Example:
	known_drones = ( 
	  {
	    order = 2;
	    ssid = "DISCO-123456";
	    serial = "PI1234567891234567";
	    model = 2318;
	    wifi_key = "abcdefgh";
	    security = 1;
	  }, 
	  {
	    order = 1;
	    ssid = "PISCO-123456";
	    serial = "PI1234567891234566";
	    model = 2318;
	    wifi_key = "abcdefgh";
	    security = 1;
	  } );

cp -p /data/lib/mppd/mydrone_manager.cfg /data/lib/mppd/drone_manager.cfg

chmod +x /data/lib/ftp/raspibridge.sh
Also chmod +x the binaries you need!

All you need from the files in the SC2 directory is raspibridge.sh. All the other binaries and modules were used to set-up the pppd tunnel SC2->DISCO (instead of RPi3->DISCO). They will be needed again if the RPi3 can be dropped.
